service:
{{ if ne .Vars.OS "windows"}} # Linux
  containerd:
    enabled: true
    running: true
  dockerd:
    enabled: false
    running: false
  kubelet:
    enabled: true
    running: false
  conntrackd:
    enabled: false
    running: false
  {{if ne .Vars.OS "flatcar"}}
  # TODO: auditd was added to Flatcar in 
  # https://github.com/flatcar/coreos-overlay/commit/b3194ee538bf7ddb8f699d37a8be81ab106079c3
  # but isn't available in the various channels yet.
  # Remove the conditional when auditd is available in Flatcar stable (supposed to happen
  # once the major release number of the stable channel is larger than 3140).
  auditd:
    enabled: true
    running: true
  # Flatcar uses systemd-timesyncd instead of chronyd.
  chronyd:
    enabled: true
    running: true
  {{end}}
{{range $name, $vers := index .Vars .Vars.OS "common-service"}}
  {{ $name }}:
  {{range $key, $val := $vers}}
    {{$key}}: {{$val}}
  {{end}}
{{end}}
{{range $name, $vers := index .Vars .Vars.OS .Vars.PROVIDER "service"}}
  {{ $name }}:
  {{range $key, $val := $vers}}
    {{$key}}: {{$val}}
  {{end}}
{{end}}
{{end}}

{{ if eq .Vars.OS "windows"}} # Windows
# Workaround until windows services are added to goss
command:
{{range $name, $vers := index .Vars .Vars.OS "common-windows-service"}}
  "Windows Service - {{ $name }}":
    exec: powershell -command "(Get-Service {{ $name }} | select *)"
    exit-status: 0
    stdout: {{range $vers.expected}}
    - {{.}}
    {{end}}
{{end}}
{{range $name, $vers := index .Vars .Vars.OS .Vars.PROVIDER "windows-service"}}
  "Windows Service - {{ $name }}":
    exec: powershell -command "(Get-Service {{ $name }} | select *)"
    exit-status: 0
    stdout: {{range $vers.expected}}
    - {{.}}
    {{end}}
{{end}}

{{ if eq .Vars.runtime "docker-ee" }}

  "Windows Service - docker":
    exec: powershell -command "(Get-Service docker | select *)"
    exit-status: 0
    stdout: 
    - Automatic
    - Running
{{end}}

{{ if eq .Vars.runtime "containerd"}}
  "Windows Service - containerd":
    exec: powershell -command "(Get-Service containerd | select *)"
    exit-status: 0
    stdout: 
    - Automatic
    - Running
{{end}}

{{end}}
